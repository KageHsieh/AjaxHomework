@{
    ViewData["Title"] = "Address";
}

<h1>Address</h1>
<select id="selectCity">
</select>
<select id="selectDistrict">
</select>
<select id="selectRoad">
</select>

@section Scripts{
    <script>
        const selCity = document.querySelector('#selectCity');
        const selDistrict = document.querySelector('#selectDistrict');
        const selRoad = document.querySelector('#selectRoad');
        //function LoadCities() {
        //    const xhr = new XMLHttpRequest();
        //    xhr.open('GET', '/api/cities');
        //    xhr.send();
        //    xhr.addEventListener('load', () => {
        //        const datas = JSON.parse(xhr.responseText);
        //        var cities = datas.map(city => {
        //            return (`<option value="${city}">${city}</option>`)
        //        })
        //        selCity.innerHTML = cities.join("");
        //        LoadDistricts();
        //        //console.log(selCity.options[selCity.selectedIndex].value);
        //    })
        //}

        //function LoadCities() {
            
        //    fetch('/api/cities')
        //    .then(response => response.json())
        //    .then(data =>{
        //            var cities = data.map(city => {
        //            return (`<option value="${city}">${city}</option>`)
        //         })
        //    selCity.innerHTML = cities.join("");
        //    })
        //    LoadDistricts();
        //        //console.log(selCity.options[selCity.selectedIndex].value);
        //}

        async function LoadCities() {
            const response = await fetch("/api/cities");
            const datas = await response.json();
            const cities = datas.map(city => {
                return (`<option value="${city}">${city}</option>`)
                })
            selCity.innerHTML = cities.join("");
            LoadDistricts();
        }

        async function LoadDistricts() {
            const response = await fetch(`/api/districts?city=${selCity.value}`);
            const datas = await response.json();
            const districts = datas.map(district => {
                return (`<option value="${district}">${district}</option>`)
                })
            selDistrict.innerHTML = districts.join("");
            LoadRoads();
        }

        async function LoadRoads() {
            const response = await fetch(`/api/roads?district=${selDistrict.value}`);
            const datas = await response.json();
            console.log(datas)
            const roads = datas.map(road => {
                return (`<option value="${road}">${road}</option>`)
            })
            selRoad.innerHTML = roads.join("");
        }



        //function LoadDistricts() {
        //    const city = selCity.options[selCity.selectedIndex].value;
        //    const xhr = new XMLHttpRequest();
        //    xhr.open('GET', `/api/districts?city=${city}`);
        //    xhr.send();
        //    xhr.addEventListener('load', () => {
        //        const datas = JSON.parse(xhr.responseText);
        //        var districts = datas.map(district => {
        //            return (`<option value="${district}">${district}</option>`)
        //        })
        //        selDistrict.innerHTML = districts.join("");
        //        // console.log(selDistrict.options[selDistrict.selectedIndex].value);
        //        LoadRoads();
        //    })

        //}
        //function LoadRoads() {
        //    const district = selDistrict.options[selDistrict.selectedIndex].value;
        //    const xhr = new XMLHttpRequest();
        //    xhr.open('GET', `/api/roads?district=${district}`);
        //    xhr.send();
        //    xhr.addEventListener('load', () => {
        //        const datas = JSON.parse(xhr.responseText);
        //        var roads = datas.map(road => {
        //            return (`<option value="${road}">${road}</option>`)
        //        })
        //        selRoad.innerHTML = roads.join("");
        //    })
        //}
        LoadCities();
        selCity.addEventListener('change', () => {
            LoadDistricts()
        })
        selDistrict.addEventListener('change', () => {
            LoadRoads();
        });

    </script>
}

@section Styles{
}